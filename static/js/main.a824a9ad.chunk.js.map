{"version":3,"sources":["components/LoginSignup.js","images/pexels-alex-andrews.jpg","components/FeatureCard.js","components/Dashboard.js","components/FeatureForm.js","components/Message.js","components/Resources.js","App.js","reportWebVitals.js","index.js"],"names":["LoginSignup","login","signup","useState","username","setUsername","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","avatar","setAvatar","className","onSubmit","e","preventDefault","handleSubmitLogin","placeholder","type","value","onChange","target","Button","variant","handleSubmitSignup","FeatureCard","currentUser","feature","handleDelete","url","show","setShow","handleClose","users","setUsers","userId","setUserId","useEffect","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","ok","json","data","console","log","name","src","feature_image","alt","test_status","priority","to","id","onClick","Modal","onHide","Header","closeButton","Title","Body","alert","Accept","body","JSON","stringify","user_id","feature_id","res","map","user","Footer","Dashboard","features","setFeatures","updatedFeatures","filter","FeatureForm","setFeatureId","setName","wireframes_link","setWireFramesLink","test_cases_link","setTestCasesLink","need_access_resources","setNeedAccessResources","test_framework","setTestFramework","project_mgmt_resources","setProjectMgmtResources","setTestStatus","setPriority","Form","Group","controlId","Label","Control","as","rows","Message","message","Resources","useParams","messages","setMessages","newMessage","setNewMessage","setFeature","newMessagePost","setNewMessagePost","App","setUser","loggedIn","setLoggedIn","clear","exact","path","jwt","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a824a9ad.chunk.js","sourcesContent":["import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nfunction LoginSignup({ login, signup }) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [newUsername, setNewUsername] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [avatar, setAvatar] = useState('');\n    \n    function handleSubmitSignup(e) {\n        e.preventDefault()\n        signup(newUsername, newPassword, avatar)\n    }\n\n    function handleSubmitLogin(e) {\n        e.preventDefault();\n        login(username, password)\n    }\n\n    return (\n        <div className=\"landing-page-container\">\n            <h1>TEST RESOURCE MANAGER</h1>\n            <form className=\"login-form\" onSubmit={(e) => handleSubmitLogin(e)}>\n                <h3>Login Here</h3>\n                <input\n                    placeholder=\"Enter a username\"\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"Enter a password\"\n                    type=\"text\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <Button variant=\"primary\" type=\"submit\">Login</Button>\n            </form>\n\n            <form className=\"signup-form\" onSubmit={(e) => handleSubmitSignup(e)}>\n            <h3>Create a New Account Here</h3>\n                <input\n                    placeholder=\"Enter a username\"\n                    type=\"text\"\n                    value={newUsername}\n                    onChange={(e) => setNewUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"Enter a password\"\n                    type=\"text\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                />\n                <input\n                    placeholder=\"Link to an avatar\"\n                    type=\"text\"\n                    value={avatar}\n                    onChange={(e) => setAvatar(e.target.value)}\n                />\n\n                <Button variant=\"primary\" type=\"submit\">Signup</Button>\n            </form>\n        </div>\n    );\n}\n\nexport default LoginSignup","export default __webpack_public_path__ + \"static/media/pexels-alex-andrews.fa4e4c13.jpg\";","import feature_image from '../images/pexels-alex-andrews.jpg';\nimport { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction FeatureCard({ currentUser, feature, handleDelete }) {\n    const production = \"https://project-5-backend.herokuapp.com/\";\n    const development = \"http://localhost:3000/\";\n    const url = (process.env.NODE_ENV === 'production' ? production : development);\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [users, setUsers] = useState([]);\n    const [userId, setUserId] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/users`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((data) => {\n                    setUsers(data)\n                });\n            } else {\n                console.log(\"please log in\")\n            }\n        });\n    }, []);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        alert(\"Shared!\");\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/assignments`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: `${userId}`,\n                feature_id: `${feature.id}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(json => console.log(json.id))\n    }\n\n    function handleDeleteButton(e) {\n        handleDelete(feature.id, e)\n    }\n\n\n    return (\n        <div className=\"feature-card\">\n            <h3>Assignment: {feature.name}</h3>\n            <img className=\"feature-image\" src={feature_image} alt=\"feature\" />\n            <h5>Test Status: {feature.test_status}</h5>\n            <h5>Priority: {feature.priority}</h5>\n            <Link to={`/features/${feature.id}`}>\n                <Button variant=\"primary\" >Resources</Button>\n            </Link>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                Share\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>SHARE WITH A TEAM MEMBER</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form onSubmit={handleSubmit}>\n\n                        <div>\n                            <select\n                                className=\"select-chore-dropdown\"\n                                id=\"user\"\n                                value={userId}\n                                onChange={(e) => setUserId(e.target.value)}\n                            >\n                                <option value=\"\">Select a team member...</option>\n                                {users.map((user) => (\n                                    <option key={user.id} value={user.id}>\n                                        {user.username}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        {/* {errors.map((err) => (\n                <p key={err} style={{ color: \"red\" }}>\n                    {err}\n                </p>\n            ))} */}\n                        <Button className=\"submit-share-button\" type=\"submit\">Submit</Button>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button> */}\n                </Modal.Footer>\n            </Modal>\n            <Button variant=\"secondary\" onClick={handleDeleteButton}>Delete</Button>\n\n        </div>\n    )\n\n}\n\nexport default FeatureCard","import { useEffect, useState } from 'react';\nimport FeatureCard from './FeatureCard';\n\n\nfunction Dashboard({currentUser}) {\n    const production = \"https://project-5-backend.herokuapp.com/\";\n    const development = \"http://localhost:3000/\";\n    const url = (process.env.NODE_ENV === 'production' ? production : development);\n    const [features, setFeatures] = useState([]);\n\n useEffect(() => {\n     const token = localStorage.getItem(\"jwt\");\n       fetch(`${url}/profile`, {\n       method: \"GET\",\n       headers: {\n       Authorization: `Bearer ${token}`,\n       },\n     }).then((response) => {\n       if (response.ok) {\n         response.json().then((data) => {\n           setFeatures(data.user.features)\n         });\n       } else {\n         console.log(\"please log in\")\n       }\n     });\n     }, []);\n\n     function handleDelete(id, e) {\n      e.preventDefault();\n      const token = localStorage.getItem(\"jwt\");\n      fetch(`${url}/features/${id}`, {\n          method: \"DELETE\",\n          headers: {\n              Authorization: `Bearer ${token}`\n          },\n      })\n          .then(res => res.json())\n          .then(json => \n            {\n            const updatedFeatures = features.filter((feature) => feature.id !== id);\n            setFeatures(updatedFeatures);\n          }\n          );\n  }\n\n    return (\n            <div className=\"dashboard-container\">\n                {features.map((feature) => (\n                    <FeatureCard handleDelete={handleDelete} key={feature.id} feature={feature} />\n                ))}\n            </div>          \n    )\n}\n\n\nexport default Dashboard;","import { useEffect, useState } from 'react';\nimport { Form, Col, Button } from \"react-bootstrap\";\n\nfunction FeatureForm(currentUser) {\n    const production = \"https://project-5-backend.herokuapp.com/\";\n    const development = \"http://localhost:3000/\";\n    const url = (process.env.NODE_ENV === 'production' ? production : development);\n    const [feature_id, setFeatureId] = useState('');\n    const [name, setName] = useState('');\n    const [wireframes_link, setWireFramesLink] = useState('');\n    const [test_cases_link, setTestCasesLink] = useState('');\n    const [need_access_resources, setNeedAccessResources] = useState('');\n    const [test_framework, setTestFramework] = useState('');\n    const [project_mgmt_resources, setProjectMgmtResources] = useState('');\n    const [test_status, setTestStatus] = useState('');\n    const [priority, setPriority] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/assignments`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: `${currentUser.currentUser.id}`,\n                feature_id: `${feature_id}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(json => console.log(json))\n    }, [feature_id]);\n\n    function onSubmit(e) {\n        e.preventDefault();\n        alert(\"Created! Navigate to your dashboard to view or edit.\");\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/features`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: `${name}`,\n                wireframes_link: `${wireframes_link}`,\n                test_cases_link: `${test_cases_link}`,\n                need_access_resources: `${need_access_resources}`,\n                test_framework: `${test_framework}`,\n                project_mgmt_resources: `${project_mgmt_resources}`,\n                test_status: `${test_status}`,\n                priority: `${priority}`\n            }),\n        })\n            .then(res => res.json())\n            .then(json => setFeatureId(json.id))\n\n        setName('')\n        setWireFramesLink('')\n        setTestCasesLink('')\n        setNeedAccessResources('')\n        setTestFramework('')\n        setProjectMgmtResources('')\n        setTestStatus('')\n        setPriority('')\n    }\n\n    return (\n        <div className=\"add-new-feature-container\">\n            <h1>Add a Feature or Project</h1>\n            <Form className=\"feature-form\" onSubmit={onSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Name of Feature or Project</Form.Label>\n                    <Form.Control as=\"textarea\" rows={1} value={name} onChange={ e => setName(e.target.value)} /> \n                </Form.Group>\n                {/*<input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Name of feature or project\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />*/}\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to wireframes\"\n                    type=\"text\"\n                    value={wireframes_link}\n                    onChange={(e) => setWireFramesLink(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to test suite\"\n                    type=\"text\"\n                    value={test_cases_link}\n                    onChange={(e) => setTestCasesLink(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"List all resources that you'll need access to\"\n                    type=\"text\"\n                    value={need_access_resources}\n                    onChange={(e) => setNeedAccessResources(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Which test framework are you using? Language?\"\n                    type=\"text\"\n                    value={test_framework}\n                    onChange={(e) => setTestFramework(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to project management resources\"\n                    type=\"text\"\n                    value={project_mgmt_resources}\n                    onChange={(e) => setProjectMgmtResources(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"What is the priority of this feature or project?\"\n                    type=\"text\"\n                    value={test_status}\n                    onChange={(e) => setTestStatus(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"What is the test status?\"\n                    type=\"text\"\n                    value={priority}\n                    onChange={(e) => setPriority(e.target.value)}\n                />\n\n                <Button variant=\"secondary\" type=\"submit\">Create</Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default FeatureForm","\n\nfunction Message({message}) {\nconsole.log(message)\n    return (\n        <div>\n        <p>{message.user.username}: {message.message}</p>\n        </div>\n    )\n}\n\nexport default Message","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Message from \"./Message\";\nimport Button from 'react-bootstrap/Button';\n\nfunction Resources({currentUser}) {\n    const production = \"https://project-5-backend.herokuapp.com/\";\n    const development = \"http://localhost:3000/\";\n    const url = (process.env.NODE_ENV === 'production' ? production : development);\n    const { id } = useParams();\n    //const [feature_id, setFeatureId] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [feature, setFeature] = useState([]);\n    const [newMessagePost, setNewMessagePost] = useState([]);\n\n    const [name, setName] = useState('');\n    const [wireframes_link, setWireFramesLink] = useState('');\n    const [test_cases_link, setTestCasesLink] = useState('');\n    const [need_access_resources, setNeedAccessResources] = useState('');\n    const [test_framework, setTestFramework] = useState('');\n    const [project_mgmt_resources, setProjectMgmtResources] = useState('');\n    const [test_status, setTestStatus] = useState('');\n    const [priority, setPriority] = useState('');\n    \n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n          fetch(`${url}/features/${id}`, {\n          method: \"GET\",\n          headers: {\n              Authorization: `Bearer ${token}`,\n        },\n        }).then((response) => {\n          if (response.ok) {\n            response.json().then((data) => {\n                setName(data.name)\n                setWireFramesLink(data.wireframes_link)\n                setTestCasesLink(data.test_cases_link)\n                setNeedAccessResources(data.need_access_resources)\n                setTestFramework(data.test_framework)\n                setProjectMgmtResources(data.project_mgmt_resources)\n                setTestStatus(data.test_status)\n                setPriority(data.priority)\n                \n            });\n          } else {\n            console.log(\"please log in\")\n          }\n        });\n        }, [feature]);\n\n        useEffect(() => {\n            const token = localStorage.getItem(\"jwt\");\n              fetch(`${url}/features/${id}`, {\n              method: \"GET\",\n              headers: {\n                  Authorization: `Bearer ${token}`,\n            },\n            }).then((response) => {\n              if (response.ok) {\n                response.json().then((data) => {\n                    setMessages(data.messages) \n                });\n              } else {\n                console.log(\"please log in\")\n              }\n            });\n            }, [newMessagePost]);\n\n\n        function onSubmit(e) {\n            e.preventDefault();\n            alert(\"Changes saved!\");\n            const token = localStorage.getItem(\"jwt\");\n            fetch(`${url}/features/${id}`, {\n                method: \"PATCH\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    Accept: \"*/*\",\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    name: `${name}`,\n                    wireframes_link: `${wireframes_link}`,\n                    test_cases_link: `${test_cases_link}`,\n                    need_access_resources: `${need_access_resources}`,\n                    test_framework: `${test_framework}`,\n                    project_mgmt_resources: `${project_mgmt_resources}`,\n                    test_status: `${test_status}`,\n                    priority: `${priority}`\n                }),\n            })\n                .then(res => res.json())\n                .then(json => {\n                    const updatedFeature = json;\n                    setFeature(updatedFeature);\n                });\n                    //setFeatureId(json.id))\n    \n            setName('')\n            setWireFramesLink('')\n            setTestCasesLink('')\n            setNeedAccessResources('')\n            setTestFramework('')\n            setProjectMgmtResources('')\n            setTestStatus('')\n            setPriority('')\n        }\n\n        function onSubmitMessage(e) {\n            e.preventDefault();\n            const token = localStorage.getItem(\"jwt\");\n            fetch(`${url}/messages`, {\n                method: \"POST\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    Accept: \"*/*\",\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    message: `${newMessage}`,\n                    user_id: `${currentUser.id}`,\n                    feature_id: `${id}`,\n                }),\n            })\n                .then(res => res.json())\n                .then(json => {\n                    const updatedMessagePost = json;\n                    setNewMessagePost(updatedMessagePost);\n                });\n                    //setFeatureId(json.id))\n                \n            setNewMessage('')\n        }\n\n        \n\n    return (\n        \n        <div className=\"resource-container\">\n            <div className=\"update-feature-container\">\n            <h2>Update Info</h2>\n            \n            <form className=\"feature-form\" onSubmit={onSubmit}>\n                <h2>{name}</h2>\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Name of feature or project\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to wireframes\"\n                    type=\"text\"\n                    value={wireframes_link}\n                    onChange={(e) => setWireFramesLink(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to test suite\"\n                    type=\"text\"\n                    value={test_cases_link}\n                    onChange={(e) => setTestCasesLink(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"List all resources that you'll need access to\"\n                    type=\"text\"\n                    value={need_access_resources}\n                    onChange={(e) => setNeedAccessResources(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Which test framework are you using? Language?\"\n                    type=\"text\"\n                    value={test_framework}\n                    onChange={(e) => setTestFramework(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to project management resources\"\n                    type=\"text\"\n                    value={project_mgmt_resources}\n                    onChange={(e) => setProjectMgmtResources(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"What is the test status?\"\n                    type=\"text\"\n                    value={test_status}\n                    onChange={(e) => setTestStatus(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"What is the priority of this feature or project?\"\n                    type=\"text\"\n                    value={priority}\n                    onChange={(e) => setPriority(e.target.value)}\n                />\n\n                <Button variant=\"primary\" type=\"submit\">Update</Button>\n            </form>\n            \n        </div>\n            \n            <div className=\"messages-container\">\n            <h2>Messages</h2>\n            <div className=\"message-block\">\n            {messages.map((message) => (\n                <Message key={message.id} message={message}/>\n            ))}\n            </div>\n            <form className=\"feature-form\" onSubmit={onSubmitMessage}>\n                \n                <input\n                    className=\"message-inputs\"\n                    placeholder=\"Type here...\"\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                />\n                <Button variant=\"primary\" type=\"submit\">Send Message</Button>\n            </form>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Resources","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport LoginSignup from './components/LoginSignup'\nimport Dashboard from './components/Dashboard';\nimport FeatureForm from './components/FeatureForm';\nimport Resources from './components/Resources';\nimport Button from 'react-bootstrap/Button';\n\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nfunction App() {\n  const production = \"https://project-5-backend.herokuapp.com/\";\n  const development = \"http://localhost:3000/\";\n  const url = (process.env.NODE_ENV === 'production' ? production : development);\n  const [user, setUser] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    fetch(`${url}/profile`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          setLoggedIn(true)\n          setUser(data.user)\n        });\n      } else {\n        console.log(\"please log in\")\n      }\n    });\n  }, []);\n\n\n  function signup(username, password, avatar) {\n    fetch(`${url}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: `${username}`,\n          password: `${password}`,\n          avatar: `${avatar}`,\n\n        },\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((data) => {\n            setUser(data.user)\n            setLoggedIn(true)\n            localStorage.setItem(\"jwt\", data.jwt);\n          });\n        } else {\n          console.log(\"form incorrectly filled out\")\n        }\n      })\n  }\n\n  function login(username, password) {\n    fetch(`${url}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: `${username}`,\n          password: `${password}`\n        }\n      })\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          console.log(\"hi\" + data.jwt)\n          setUser(data.user)\n          setLoggedIn(true)\n          localStorage.setItem(\"jwt\", data.jwt);\n        });\n      } else {\n        console.log(\"wrong username/password\")\n      }\n    })\n  }\n\n\n  function logout() {\n    localStorage.clear()\n    setUser(null)\n    setLoggedIn(false)\n  }\n\n\n  return (\n    <div className=\"App\">\n      {loggedIn ?\n        <Router>\n          <nav className=\"navbar-container\">\n            {user ?\n              <div>\n                <p>Q-llaborate</p>\n                \n                <h1>Hi {user.username}</h1>\n                <img src={user.avatar} className=\"avatar\" alt=\"avatar\"/>\n              </div>\n              : ''}\n            <Link to=\"/\">\n              <Button variant=\"primary\" className=\"nav-button\" type=\"button\">Dashboard</Button>\n            </Link>\n            \n            <Link to=\"/featureform\">\n              <Button variant=\"primary\" className=\"nav-button\" type=\"button\">Add a New Feature</Button>\n            </Link>\n\n            <Button variant=\"primary\" className=\"nav-button\" onClick={logout}>Logout</Button>\n            <p className=\"footer-sources\">Photo by Alex Andrews from Pexels</p>\n          </nav>\n\n          <Route exact path=\"/\">\n            <Dashboard currentUser={user} />\n          </Route>\n\n          <Route exact path=\"/featureform\">\n            <FeatureForm currentUser={user} />\n          </Route>\n\n          <Route exact path=\"/features/:id\">\n            <Resources currentUser={user} />\n          </Route>\n\n\n        </Router> :\n        <LoginSignup login={login} signup={signup} />\n      }\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}