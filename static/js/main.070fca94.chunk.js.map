{"version":3,"sources":["components/LoginSignup.js","images/pexels-alex-andrews.jpg","components/FeatureCard.js","components/Dashboard.js","components/FeatureForm.js","components/Resources.js","App.js","reportWebVitals.js","index.js"],"names":["LoginSignup","login","signup","useState","username","setUsername","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","avatar","setAvatar","className","onSubmit","e","preventDefault","handleSubmitLogin","placeholder","type","value","onChange","target","handleSubmitSignup","FeatureCard","currentUser","feature","show","setShow","handleClose","users","setUsers","userId","setUserId","useEffect","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","ok","json","data","console","log","name","src","feature_image","alt","test_status","priority","to","id","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Accept","body","JSON","stringify","user_id","feature_id","res","map","user","Footer","Dashboard","features","setFeatures","FeatureForm","setFeatureId","setName","wireframes_link","setWireFramesLink","test_cases_link","setTestCasesLink","need_access_resources","setNeedAccessResources","test_framework","setTestFramework","project_mgmt_resources","setProjectMgmtResources","setTestStatus","setPriority","Resources","useParams","App","setUser","loggedIn","setLoggedIn","clear","exact","path","jwt","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.070fca94.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction LoginSignup({ login, signup }) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [newUsername, setNewUsername] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [avatar, setAvatar] = useState('');\n\n\n    function handleSubmitSignup(e) {\n        e.preventDefault()\n        signup(newUsername, newPassword, avatar)\n    }\n\n    function handleSubmitLogin(e) {\n        e.preventDefault();\n        login(username, password)\n    }\n\n    return (\n        <div className=\"landing-page-container\">\n            <h1>TEST RESOURCE MANAGER</h1>\n            <form className=\"login-form\" onSubmit={(e) => handleSubmitLogin(e)}>\n                <h3>Login Here</h3>\n                <input\n                    placeholder=\"Enter a username\"\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"Enter a password\"\n                    type=\"text\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\">Login</button>\n            </form>\n\n            <form className=\"signup-form\" onSubmit={(e) => handleSubmitSignup(e)}>\n            <h3>Create a New Account Here</h3>\n                <input\n                    placeholder=\"Enter a username\"\n                    type=\"text\"\n                    value={newUsername}\n                    onChange={(e) => setNewUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"Enter a password\"\n                    type=\"text\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                />\n                <input\n                    placeholder=\"Link to an avatar\"\n                    type=\"text\"\n                    value={avatar}\n                    onChange={(e) => setAvatar(e.target.value)}\n                />\n\n                <button type=\"submit\">Signup</button>\n            </form>\n        </div>\n    );\n}\n\nexport default LoginSignup","export default __webpack_public_path__ + \"static/media/pexels-alex-andrews.fa4e4c13.jpg\";","import feature_image from '../images/pexels-alex-andrews.jpg';\nimport { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction FeatureCard({ currentUser, feature }) {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [users, setUsers] = useState([]);\n    const [userId, setUserId] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`http://localhost:3000/users`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((data) => {\n\n                    setUsers(data)\n                });\n            } else {\n                console.log(\"please log in\")\n            }\n        });\n    }, []);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`http://localhost:3000/assignments`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: `${userId}`,\n                feature_id: `${feature.id}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(json => console.log(json.id))\n\n    }\n\n    return (\n        <div className=\"feature-card\">\n            <h2>Assignment: {feature.name}</h2>\n            <img className=\"feature-image\" src={feature_image} alt=\"feature\" />\n            <h3>Test Status: {feature.test_status}</h3>\n            <h3>Priority: {feature.priority}</h3>\n            <Link to={`/features/${feature.id}`}>\n                <button type=\"button\">Resources</button>\n            </Link>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                Share\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Select another user to share this feature/project with</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form onSubmit={handleSubmit}>\n                        <h2>Add a User</h2>\n                        <div>\n                            <select\n                                className=\"select-chore-dropdown\"\n                                id=\"user\"\n                                value={userId}\n                                onChange={(e) => setUserId(e.target.value)}\n                            >\n                                <option value=\"\">Select user...</option>\n                                {users.map((user) => (\n                                    <option key={user.id} value={user.id}>\n                                        {user.username}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        {/* {errors.map((err) => (\n                <p key={err} style={{ color: \"red\" }}>\n                    {err}\n                </p>\n            ))} */}\n                        <button className=\"submit\" type=\"submit\">Submit</button>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button> */}\n                </Modal.Footer>\n            </Modal>\n\n\n        </div>\n    )\n\n}\n\nexport default FeatureCard","import { useEffect, useState } from 'react';\nimport FeatureCard from './FeatureCard';\n\n\nfunction Dashboard({currentUser}) {\n    // const production = \"https://project-5-backend.herokuapp.com/\";\n    // const development = \"http://localhost:3000/\";\n    // const url = (process.env.NODE_ENV ? production : development);\n    const [features, setFeatures] = useState([]);\n    \n    \n\n useEffect(() => {\n     const token = localStorage.getItem(\"jwt\");\n       fetch(`http://localhost:3000/profile`, {\n       method: \"GET\",\n       headers: {\n       Authorization: `Bearer ${token}`,\n       },\n     }).then((response) => {\n       if (response.ok) {\n         response.json().then((data) => {\n           setFeatures(data.user.features)\n         });\n       } else {\n         console.log(\"please log in\")\n       }\n     });\n     }, []);\n\n\n    return (\n        \n            <div className=\"dashboard-container\">\n                {features.map((feature) => (\n                    <FeatureCard key={feature.id} feature={feature} />\n                ))}\n            </div>\n               \n    )\n}\n\n\nexport default Dashboard;","import { useEffect, useState } from 'react';\n\nfunction FeatureForm(currentUser) {\n    const [feature_id, setFeatureId] = useState('');\n    const [name, setName] = useState('');\n    const [wireframes_link, setWireFramesLink] = useState('');\n    const [test_cases_link, setTestCasesLink] = useState('');\n    const [need_access_resources, setNeedAccessResources] = useState('');\n    const [test_framework, setTestFramework] = useState('');\n    const [project_mgmt_resources, setProjectMgmtResources] = useState('');\n    const [test_status, setTestStatus] = useState('');\n    const [priority, setPriority] = useState('');\n\n    console.log(currentUser.currentUser.id);\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n        fetch('http://localhost:3000/assignments', {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: `${currentUser.currentUser.id}`,\n                feature_id: `${feature_id}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(json => console.log(json))\n    }, [feature_id]);\n\n    \n\n    function onSubmit(e) {\n        e.preventDefault();\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`http://localhost:3000/features`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: `${name}`,\n                wireframes_link: `${wireframes_link}`,\n                test_cases_link: `${test_cases_link}`,\n                need_access_resources: `${need_access_resources}`,\n                test_framework: `${test_framework}`,\n                project_mgmt_resources: `${project_mgmt_resources}`,\n                test_status: `${test_status}`,\n                priority: `${priority}`\n            }),\n        })\n            .then(res => res.json())\n            .then(json => setFeatureId(json.id))\n\n\n        setName('')\n        setWireFramesLink('')\n        setTestCasesLink('')\n        setNeedAccessResources('')\n        setTestFramework('')\n        setProjectMgmtResources('')\n        setTestStatus('')\n        setPriority('')\n\n    }\n\n\n\n\n    return (\n        <div className=\"add-new-feature-container\">\n            <h1>Add a Feature or Project</h1>\n            <form className=\"feature-form\" onSubmit={onSubmit}>\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Name of feature or project\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to wireframes\"\n                    type=\"text\"\n                    value={wireframes_link}\n                    onChange={(e) => setWireFramesLink(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to test suite\"\n                    type=\"text\"\n                    value={test_cases_link}\n                    onChange={(e) => setTestCasesLink(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"List all resources that you'll need access to\"\n                    type=\"text\"\n                    value={need_access_resources}\n                    onChange={(e) => setNeedAccessResources(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Which test framework are you using? Language?\"\n                    type=\"text\"\n                    value={test_framework}\n                    onChange={(e) => setTestFramework(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to project management resources\"\n                    type=\"text\"\n                    value={project_mgmt_resources}\n                    onChange={(e) => setProjectMgmtResources(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"What is the priority of this feature or project?\"\n                    type=\"text\"\n                    value={test_status}\n                    onChange={(e) => setTestStatus(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"What is the test status?\"\n                    type=\"text\"\n                    value={priority}\n                    onChange={(e) => setPriority(e.target.value)}\n                />\n\n                <button type=\"submit\">Create</button>\n            </form>\n        </div>\n    );\n}\n\nexport default FeatureForm","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Resources() {\n    const { id } = useParams();\n    const [feature_id, setFeatureId] = useState('');\n\n    const [name, setName] = useState('');\n    const [wireframes_link, setWireFramesLink] = useState('');\n    const [test_cases_link, setTestCasesLink] = useState('');\n    const [need_access_resources, setNeedAccessResources] = useState('');\n    const [test_framework, setTestFramework] = useState('');\n    const [project_mgmt_resources, setProjectMgmtResources] = useState('');\n    const [test_status, setTestStatus] = useState('');\n    const [priority, setPriority] = useState('');\n    \n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n          fetch(`http://localhost:3000/features/${id}`, {\n          method: \"GET\",\n          headers: {\n              Authorization: `Bearer ${token}`,\n        },\n        }).then((response) => {\n          if (response.ok) {\n            response.json().then((feature) => {\n                console.log(feature)\n                setName(feature.name)\n                setWireFramesLink(feature.wireframes_link)\n                setTestCasesLink(feature.test_cases_link)\n                setNeedAccessResources(feature.need_access_resources)\n                setTestFramework(feature.test_framework)\n                setProjectMgmtResources(feature.project_mgmt_resources)\n                setTestStatus(feature.test_status)\n                setPriority(feature.priority)\n                \n            });\n          } else {\n            console.log(\"please log in\")\n          }\n        });\n        }, [feature_id]);\n\n\n        function onSubmit(e) {\n            e.preventDefault();\n            const token = localStorage.getItem(\"jwt\");\n            fetch(`http://localhost:3000/features/${id}`, {\n                method: \"PATCH\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    Accept: \"*/*\",\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    name: `${name}`,\n                    wireframes_link: `${wireframes_link}`,\n                    test_cases_link: `${test_cases_link}`,\n                    need_access_resources: `${need_access_resources}`,\n                    test_framework: `${test_framework}`,\n                    project_mgmt_resources: `${project_mgmt_resources}`,\n                    test_status: `${test_status}`,\n                    priority: `${priority}`\n                }),\n            })\n                .then(res => res.json())\n                .then(json => setFeatureId(json.id))\n    \n            setName('')\n            setWireFramesLink('')\n            setTestCasesLink('')\n            setNeedAccessResources('')\n            setTestFramework('')\n            setProjectMgmtResources('')\n            setTestStatus('')\n            setPriority('')\n        }\n\n\n    return (\n        \n        <div className=\"resource-container\">\n            <div className=\"update-feature-container\">\n            <h2>Update Info</h2>\n            \n            <form className=\"feature-form\" onSubmit={onSubmit}>\n                <h2>{name}</h2>\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Name of feature or project\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to wireframes\"\n                    type=\"text\"\n                    value={wireframes_link}\n                    onChange={(e) => setWireFramesLink(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to test suite\"\n                    type=\"text\"\n                    value={test_cases_link}\n                    onChange={(e) => setTestCasesLink(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"List all resources that you'll need access to\"\n                    type=\"text\"\n                    value={need_access_resources}\n                    onChange={(e) => setNeedAccessResources(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Which test framework are you using? Language?\"\n                    type=\"text\"\n                    value={test_framework}\n                    onChange={(e) => setTestFramework(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to project management resources\"\n                    type=\"text\"\n                    value={project_mgmt_resources}\n                    onChange={(e) => setProjectMgmtResources(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"What is the test status?\"\n                    type=\"text\"\n                    value={test_status}\n                    onChange={(e) => setTestStatus(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"What is the priority of this feature or project?\"\n                    type=\"text\"\n                    value={priority}\n                    onChange={(e) => setPriority(e.target.value)}\n                />\n\n                <button type=\"submit\">Update</button>\n            </form>\n            <button>Leave Project / Feature</button>\n        </div>\n            \n            <div className=\"messages-container\">\n            <h2>Messages</h2>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Resources","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport LoginSignup from './components/LoginSignup'\nimport Dashboard from './components/Dashboard';\nimport FeatureForm from './components/FeatureForm';\nimport Resources from './components/Resources';\n\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nfunction App() {\n  // const production = \"https://project-5-backend.herokuapp.com/\";\n  // const development = \"http://localhost:3000/\";\n  // const url = (process.env.NODE_ENV ? production : development);\n  const [user, setUser] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    console.log(\"token: \" + token)\n\n    fetch(\"http://localhost:3000/profile\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          setLoggedIn(true)\n          setUser(data.user)\n        });\n      } else {\n        console.log(\"please log in\")\n      }\n    });\n  }, []);\n\n\n  function signup(username, password, avatar) {\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: `${username}`,\n          password: `${password}`,\n          avatar: `${avatar}`,\n\n        },\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((data) => {\n            setUser(data.user)\n            setLoggedIn(true)\n            localStorage.setItem(\"jwt\", data.jwt);\n          });\n        } else {\n          console.log(\"form incorrectly filled out\")\n        }\n      })\n  }\n\n  function login(username, password) {\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: `${username}`,\n          password: `${password}`\n        }\n      })\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          console.log(\"hi\" + data.jwt)\n          setUser(data.user)\n          setLoggedIn(true)\n          localStorage.setItem(\"jwt\", data.jwt);\n        });\n      } else {\n        console.log(\"wrong username/password\")\n      }\n    })\n  }\n\n\n  function logout() {\n    localStorage.clear()\n    setUser(null)\n    setLoggedIn(false)\n  }\n\n\n  return (\n    <div className=\"App\">\n      {loggedIn ?\n        <Router>\n          <nav className=\"navbar-container\">\n            {user ?\n              <div>\n                <p>TEST RESOURCE MANAGER</p>\n                \n                <h1>Hi {user.username}</h1>\n                <img src={user.avatar} className=\"avatar\" alt=\"avatar\"/>\n              </div>\n              : ''}\n            <Link to=\"/\">\n              <button className=\"nav-button\" type=\"button\">Dashboard</button>\n            </Link>\n            \n            <Link to=\"/featureform\">\n              <button className=\"nav-button\" type=\"button\">Add a New Feature</button>\n            </Link>\n\n            <button className=\"nav-button\" onClick={logout}>Logout</button>\n            <p className=\"footer-sources\">Photo by Alex Andrews from Pexels</p>\n          </nav>\n\n          <Route exact path=\"/\">\n            <Dashboard currentUser={user} />\n          </Route>\n\n          <Route exact path=\"/featureform\">\n            <FeatureForm currentUser={user} />\n          </Route>\n\n          <Route exact path=\"/features/:id\">\n            <Resources currentUser={user} />\n          </Route>\n\n\n        </Router> :\n        <LoginSignup login={login} signup={signup} />\n      }\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}