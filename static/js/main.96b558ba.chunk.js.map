{"version":3,"sources":["components/LoginSignup.js","images/pexels-alex-andrews.jpg","components/FeatureCard.js","components/Dashboard.js","components/FeatureForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginSignup","login","signup","useState","username","setUsername","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","avatar","setAvatar","className","onSubmit","e","preventDefault","handleSubmitLogin","placeholder","type","value","onChange","target","handleSubmitSignup","FeatureCard","currentUser","feature","name","src","feature_image","alt","test_status","priority","Dashboard","features","setFeatures","useEffect","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","ok","json","data","console","log","map","id","FeatureForm","setName","App","user","setUser","loggedIn","setLoggedIn","to","onClick","clear","exact","path","Accept","body","JSON","stringify","jwt","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96b558ba.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction LoginSignup({ login, signup }) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [newUsername, setNewUsername] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [avatar, setAvatar] = useState('');\n\n\n    function handleSubmitSignup(e) {\n        e.preventDefault()\n        signup(newUsername, newPassword, avatar)\n    }\n\n    function handleSubmitLogin(e) {\n        e.preventDefault();\n        login(username, password)\n    }\n\n    return (\n        <container className=\"landing-page-container\">\n            <h1>TEST RESOURCE MANAGER</h1>\n            <form className=\"login-form\" onSubmit={(e) => handleSubmitLogin(e)}>\n                <h3>Login Here</h3>\n                <input\n                    placeholder=\"Enter a username\"\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"Enter a password\"\n                    type=\"text\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\">Login</button>\n            </form>\n\n            <form className=\"signup-form\" onSubmit={(e) => handleSubmitSignup(e)}>\n            <h3>Create a New Account Here</h3>\n                <input\n                    placeholder=\"Enter a username\"\n                    type=\"text\"\n                    value={newUsername}\n                    onChange={(e) => setNewUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"Enter a password\"\n                    type=\"text\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                />\n                <input\n                    placeholder=\"Link to an avatar\"\n                    type=\"text\"\n                    value={avatar}\n                    onChange={(e) => setAvatar(e.target.value)}\n                />\n\n                <button type=\"submit\">Signup</button>\n            </form>\n        </container>\n    );\n}\n\nexport default LoginSignup","export default __webpack_public_path__ + \"static/media/pexels-alex-andrews.a5a3c6e5.jpg\";","import feature_image from '../images/pexels-alex-andrews.jpg';\n\nfunction FeatureCard({ currentUser, feature }) {\n\n    return (\n        <container className=\"feature-card\">\n            <h2>Assignment: {feature.name}</h2>\n            <img className=\"feature-image\" src={feature_image} alt=\"feature image\"/>\n            <h3>Test Status: {feature.test_status}</h3>\n            <h3>Priority: {feature.priority}</h3>\n            <button>View Resources</button>\n            <button>Share</button>\n        </container>\n    )\n\n}\n\nexport default FeatureCard","import { useEffect, useState } from 'react';\nimport FeatureCard from './FeatureCard';\n\nfunction Dashboard({currentUser}) {\n    const production = \"https://project-5-backend.herokuapp.com/\";\n    const development = \"http://localhost:3000/\";\n    const url = (process.env.NODE_ENV ? production : development);\n    const [features, setFeatures] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n          fetch(`http://localhost:3000/features`, {\n          method: \"GET\",\n          headers: {\n          Authorization: `Bearer ${token}`,\n          },\n        }).then((response) => {\n          if (response.ok) {\n            response.json().then((data) => {\n              setFeatures(data)\n            });\n          } else {\n            console.log(\"please log in\")\n          }\n        });\n        }, []);\n\n        console.log({features})\n\n    \n    return (\n            <container className=\"dashboard-container\">\n                {features.map((feature) => (\n                    <FeatureCard key={feature.id} feature={feature} />\n                ))}\n            </container>\n    )\n}\n\n\nexport default Dashboard;","import { useState } from 'react';\n\nfunction FeatureForm() {\n    const [name, setName] = useState('');\n\n\n    return (\n        <container className=\"add-new-feature-container\">\n            <h1>Add a Feature or Project</h1>\n            <form className=\"feature-form\">\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Name of feature or project\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to wireframes\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to test suite\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"List all resources that you'll need access to\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Which test framework are you using? Language?\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"Link to project management resources\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"What is the priority of this feature or project?\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <input\n                    className=\"feature-form-inputs\"\n                    placeholder=\"What is the test status?\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n\n                <button type=\"submit\">Create</button>\n            </form>\n        </container>\n    );\n}\n\nexport default FeatureForm","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport LoginSignup from './components/LoginSignup'\nimport Dashboard from './components/Dashboard';\nimport FeatureForm from './components/FeatureForm';\n\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nfunction App() {\n  const production = \"https://project-5-backend.herokuapp.com/\";\n  const development = \"http://localhost:3000/\";\n  const url = (process.env.NODE_ENV ? production : development);\n  const [user, setUser] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    console.log(\"token: \" + token)\n\n    fetch(\"http://localhost:3000/profile\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          setLoggedIn(true)\n          setUser(data.user)\n        });\n      } else {\n        console.log(\"please log in\")\n      }\n    });\n  }, []);\n\n\n  function signup(username, password, avatar) {\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: `${username}`,\n          password: `${password}`,\n          avatar: `${avatar}`,\n\n        },\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((data) => {\n            setUser(data.user)\n            setLoggedIn(true)\n            localStorage.setItem(\"jwt\", data.jwt);\n          });\n        } else {\n          console.log(\"form incorrectly filled out\")\n        }\n      })\n  }\n\n  function login(username, password) {\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: `${username}`,\n          password: `${password}`\n        }\n      })\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          console.log(\"hi\" + data.jwt)\n          setUser(data.user)\n          setLoggedIn(true)\n          localStorage.setItem(\"jwt\", data.jwt);\n        });\n      } else {\n        console.log(\"wrong username/password\")\n      }\n    })\n  }\n\n\n  function logout() {\n    localStorage.clear()\n    setUser(null)\n    setLoggedIn(false)\n  }\n\n\n  return (\n    <div className=\"App\">\n      {loggedIn ?\n        <Router>\n          <nav className=\"navbar-container\">\n            {user ?\n              <div>\n                <p>TEST RESOURCE MANAGER</p>\n                \n                <h1>Hi {user.username}</h1>\n                <img src={user.avatar} className=\"avatar\" alt=\"avatar\"/>\n              </div>\n              : ''}\n            <Link to=\"/\">\n              <button className=\"nav-button\" type=\"button\">Dashboard</button>\n            </Link>\n            \n            <Link to=\"/featureform\">\n              <button className=\"nav-button\" type=\"button\">Add a New Feature</button>\n            </Link>\n\n            <button className=\"nav-button\" onClick={logout}>Logout</button>\n            <p className=\"footer-sources\">Photo by Alex Andrews from Pexels</p>\n          </nav>\n\n          <Route exact path=\"/\">\n            <Dashboard currentUser={user} />\n          </Route>\n\n          <Route exact path=\"/featureform\">\n            <FeatureForm currentUser={user} />\n          </Route>\n\n\n        </Router> :\n        <LoginSignup login={login} signup={signup} />\n      }\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}