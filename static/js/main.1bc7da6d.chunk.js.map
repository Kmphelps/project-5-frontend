{"version":3,"sources":["components/LoginSignup.js","images/network.png","images/view.png","images/desk.jpg","components/FeatureCard.js","components/Dashboard.js","components/FeatureForm.js","components/Message.js","components/Resources.js","App.js","reportWebVitals.js","index.js"],"names":["LoginSignup","login","signup","useState","username","setUsername","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","avatar","setAvatar","className","onSubmit","e","preventDefault","handleSubmitLogin","placeholder","type","value","onChange","target","Button","variant","handleSubmitSignup","id","FeatureCard","currentUser","feature","handleDelete","url","show","setShow","handleClose","users","setUsers","userId","setUserId","useEffect","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","ok","json","data","console","log","name","src","desk_image","alt","to","view_image","onClick","network_image","Modal","onHide","Header","closeButton","Title","Body","alert","Accept","body","JSON","stringify","user_id","feature_id","res","map","user","Footer","Dashboard","features","setFeatures","updatedFeatures","filter","FeatureForm","setFeatureId","setName","wireframes_link","setWireFramesLink","test_cases_link","setTestCasesLink","need_access_resources","setNeedAccessResources","test_framework","setTestFramework","project_mgmt_resources","setProjectMgmtResources","test_status","setTestStatus","priority","setPriority","Form","Group","controlId","Label","Control","as","rows","Message","message","Resources","useParams","messages","setMessages","newMessage","setNewMessage","setFeature","newMessagePost","setNewMessagePost","style","fontWeight","href","color","App","setUser","loggedIn","setLoggedIn","clear","title","exact","path","jwt","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bc7da6d.chunk.js","sourcesContent":["import { useState, Component } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nfunction LoginSignup({ login, signup }) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [newUsername, setNewUsername] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [avatar, setAvatar] = useState('');\n\n    function handleSubmitSignup(e) {\n        e.preventDefault()\n        signup(newUsername, newPassword, avatar)\n    }\n\n    function handleSubmitLogin(e) {\n        e.preventDefault();\n        login(username, password)\n    }\n\n    return (\n        <div className=\"landing-page-container\">\n            <h1>QAllaborative</h1>\n            <form className=\"login-form\" onSubmit={(e) => handleSubmitLogin(e)}>\n                <h3>Login</h3>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input\n                        className=\"form-control\"\n                        placeholder=\"Enter a username\"\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        className=\"form-control\"\n                        placeholder=\"Enter a password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n                <Button variant=\"primary\" type=\"submit\">Login</Button>\n            </form>\n\n            <form className=\"signup-form\" onSubmit={(e) => handleSubmitSignup(e)}>\n                <h3>Signup</h3>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input\n                        className=\"form-control\"\n                        placeholder=\"Enter a username\"\n                        type=\"text\"\n                        value={newUsername}\n                        onChange={(e) => setNewUsername(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        className=\"form-control\"\n                        placeholder=\"Enter a password\"\n                        type=\"password\"\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Avatar</label>\n                    <input\n                        className=\"form-control\"\n                        placeholder=\"Link to an avatar\"\n                        type=\"text\"\n                        value={avatar}\n                        onChange={(e) => setAvatar(e.target.value)}\n                    />\n                </div>\n                <Button id=\"signup-button\" variant=\"primary\" type=\"submit\">Signup</Button>\n            </form>\n        </div>\n    );\n}\n\nexport default LoginSignup","export default __webpack_public_path__ + \"static/media/network.7f971edd.png\";","export default __webpack_public_path__ + \"static/media/view.ecf738e2.png\";","export default __webpack_public_path__ + \"static/media/desk.0e82aebe.jpg\";","import { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport network_image from '../images/network.png';\nimport view_image from '../images/view.png';\nimport desk_image from '../images/desk.jpg';\n\nfunction FeatureCard({ currentUser, feature, handleDelete }) {\n    const production = \"https://project-5-backend.herokuapp.com/\";\n    const development = \"http://localhost:3000/\";\n    const url = (process.env.NODE_ENV === 'production' ? production : development);\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [users, setUsers] = useState([]);\n    const [userId, setUserId] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/users`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((data) => {\n                    setUsers(data)\n                });\n            } else {\n                console.log(\"please log in\")\n            }\n        });\n    }, []);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        alert(\"Shared!\");\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/assignments`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: `${userId}`,\n                feature_id: `${feature.id}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(json => console.log(json.id))\n    }\n\n    function handleDeleteButton(e) {\n        handleDelete(feature.id, e)\n    }\n\n\n    return (\n        <div className=\"feature-card\">\n            <h4>{feature.name}</h4>\n            <img className=\"feature-image\" src={desk_image} alt=\"feature\" />\n            <Link to={`/features/${feature.id}`}>\n                <Button id=\"feature-card-btn\" variant=\"primary\">View Resources\n                <img className=\"view-image\" src={view_image} alt=\"view\" />\n                </Button>\n            </Link>\n\n            <Button id=\"feature-card-btn\" variant=\"primary\" onClick={handleShow}>\n                Share<img className=\"network-image\" src={network_image} alt=\"network\" />\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title  >Share with a Team Member</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form onSubmit={handleSubmit}>\n\n                        <div>\n                            <select\n                                className=\"select-dropdown\"\n                                id=\"user\"\n                                value={userId}\n                                onChange={(e) => setUserId(e.target.value)}\n                            >\n                                <option value=\"\">Select a team member...</option>\n                                {users.map((user) => (\n                                    <option key={user.id} value={user.id}>\n                                        {user.username}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        {/* {errors.map((err) => (\n                <p key={err} style={{ color: \"red\" }}>\n                    {err}\n                </p>\n            ))} */}\n                        <Button className=\"submit-share-button\" type=\"submit\">Submit</Button>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button> */}\n                </Modal.Footer>\n            </Modal>\n            \n            <button className=\"card-delete-button\" onClick={handleDeleteButton}>Remove</button>\n\n        </div>\n    )\n\n}\n\nexport default FeatureCard","import { useEffect, useState } from 'react';\nimport FeatureCard from './FeatureCard';\n\n\nfunction Dashboard({ currentUser }) {\n  const production = \"https://project-5-backend.herokuapp.com/\";\n  const development = \"http://localhost:3000/\";\n  const url = (process.env.NODE_ENV === 'production' ? production : development);\n  const [features, setFeatures] = useState([]);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    fetch(`${url}/profile`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          setFeatures(data.user.features)\n        });\n      } else {\n        console.log(\"please log in\")\n      }\n    });\n  }, []);\n\n  function handleDelete(id, e) {\n    e.preventDefault();\n    const token = localStorage.getItem(\"jwt\");\n    fetch(`${url}/features/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n    })\n      .then(res => res.json())\n      .then(json => {\n        const updatedFeatures = features.filter((feature) => feature.id !== id);\n        setFeatures(updatedFeatures);\n      }\n      );\n  }\n\n  return (\n    <div>\n      <h2 className=\"dashboard-header\">Features I'm Testing</h2>\n      <div className=\"dashboard-container\">\n        {features.map((feature) => (\n          <FeatureCard handleDelete={handleDelete} key={feature.id} feature={feature} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\n\nexport default Dashboard;","import { useEffect, useState } from 'react';\nimport { Form, Col, Button } from \"react-bootstrap\";\n\nfunction FeatureForm(currentUser) {\n    const production = \"https://project-5-backend.herokuapp.com/\";\n    const development = \"http://localhost:3000/\";\n    const url = (process.env.NODE_ENV === 'production' ? production : development);\n    const [feature_id, setFeatureId] = useState('');\n    const [name, setName] = useState('');\n    const [wireframes_link, setWireFramesLink] = useState('');\n    const [test_cases_link, setTestCasesLink] = useState('');\n    const [need_access_resources, setNeedAccessResources] = useState('');\n    const [test_framework, setTestFramework] = useState('');\n    const [project_mgmt_resources, setProjectMgmtResources] = useState('');\n    const [test_status, setTestStatus] = useState('');\n    const [priority, setPriority] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/assignments`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: `${currentUser.currentUser.id}`,\n                feature_id: `${feature_id}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(json => console.log(json))\n    }, [feature_id]);\n\n    function onSubmit(e) {\n        e.preventDefault();\n        alert(\"Created! Navigate to your dashboard to view or edit.\");\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/features`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: `${name}`,\n                wireframes_link: `${wireframes_link}`,\n                test_cases_link: `${test_cases_link}`,\n                need_access_resources: `${need_access_resources}`,\n                test_framework: `${test_framework}`,\n                project_mgmt_resources: `${project_mgmt_resources}`,\n                test_status: `${test_status}`,\n                priority: `${priority}`\n            }),\n        })\n            .then(res => res.json())\n            .then(json => setFeatureId(json.id))\n\n        setName('')\n        setWireFramesLink('')\n        setTestCasesLink('')\n        setNeedAccessResources('')\n        setTestFramework('')\n        setProjectMgmtResources('')\n        setTestStatus('')\n        setPriority('')\n    }\n\n    return (\n        <div className=\"add-new-feature-container\">\n            <h2>Add a Feature or Project</h2>\n            <Form className=\"feature-form\" onSubmit={onSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows={1}\n                        placeholder=\"Name of feature or project\"\n                        value={name}\n                        onChange={e => setName(e.target.value)} \n                        />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Wireframes</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows={1}\n                        placeholder=\"Link to wireframes\"\n                        value={wireframes_link}\n                        onChange={e => setWireFramesLink(e.target.value)} \n                        />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Test Cases</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows={1}\n                        placeholder=\"Link to test suite\"\n                        value={test_cases_link}\n                        onChange={e => setTestCasesLink(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Test Resources</Form.Label>\n                <Form.Control\n                    as=\"textarea\"\n                    rows={3}\n                    placeholder=\"List all resources that you'll need access to\"\n                    value={need_access_resources}\n                    onChange={e => setNeedAccessResources(e.target.value)}\n                />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Test Automation</Form.Label>\n                <Form.Control\n                    as=\"textarea\"\n                    rows={3}\n                    placeholder=\"Which test framework are you using? Language?\"\n                    value={test_framework}\n                    onChange={e => setTestFramework(e.target.value)}\n                />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Project Management Resources</Form.Label>\n                <Form.Control\n                    as=\"textarea\"\n                    rows={3}\n                    placeholder=\"Link to project management resources\"\n                    value={project_mgmt_resources}\n                    onChange={e => setProjectMgmtResources(e.target.value)}\n                />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Priority</Form.Label>\n                <Form.Control\n                    as=\"textarea\"\n                    rows={1}\n                    placeholder=\"What is the priority of this feature or project?\"\n                    value={test_status}\n                    onChange={e => setTestStatus(e.target.value)}\n                />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Status</Form.Label>\n                <Form.Control\n                    as=\"textarea\"\n                    rows={1}\n                    placeholder=\"What is the test status?\"\n                    value={priority}\n                    onChange={e => setPriority(e.target.value)}\n                />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">Create</Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default FeatureForm","\n\nfunction Message({message}) {\nconsole.log(message)\n    return (\n        <div>\n        <p>{message.user.username}: {message.message}</p>\n        </div>\n    )\n}\n\nexport default Message","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Message from \"./Message\";\nimport { Form, Col, Button } from \"react-bootstrap\";\n\nfunction Resources({ currentUser }) {\n    const production = \"https://project-5-backend.herokuapp.com/\";\n    const development = \"http://localhost:3000/\";\n    const url = (process.env.NODE_ENV === 'production' ? production : development);\n    const { id } = useParams();\n    //const [feature_id, setFeatureId] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [feature, setFeature] = useState([]);\n    const [newMessagePost, setNewMessagePost] = useState([]);\n\n    const [name, setName] = useState('');\n    const [wireframes_link, setWireFramesLink] = useState('');\n    const [test_cases_link, setTestCasesLink] = useState('');\n    const [need_access_resources, setNeedAccessResources] = useState('');\n    const [test_framework, setTestFramework] = useState('');\n    const [project_mgmt_resources, setProjectMgmtResources] = useState('');\n    const [test_status, setTestStatus] = useState('');\n    const [priority, setPriority] = useState('');\n\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/features/${id}`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((data) => {\n                    setName(data.name)\n                    setWireFramesLink(data.wireframes_link)\n                    setTestCasesLink(data.test_cases_link)\n                    setNeedAccessResources(data.need_access_resources)\n                    setTestFramework(data.test_framework)\n                    setProjectMgmtResources(data.project_mgmt_resources)\n                    setTestStatus(data.test_status)\n                    setPriority(data.priority)\n\n                });\n            } else {\n                console.log(\"please log in\")\n            }\n        });\n    }, [feature]);\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/features/${id}`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((data) => {\n                    setMessages(data.messages)\n                });\n            } else {\n                console.log(\"please log in\")\n            }\n        });\n    }, [newMessagePost]);\n\n\n    function onSubmit(e) {\n        e.preventDefault();\n        alert(\"Changes saved!\");\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/features/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: `${name}`,\n                wireframes_link: `${wireframes_link}`,\n                test_cases_link: `${test_cases_link}`,\n                need_access_resources: `${need_access_resources}`,\n                test_framework: `${test_framework}`,\n                project_mgmt_resources: `${project_mgmt_resources}`,\n                test_status: `${test_status}`,\n                priority: `${priority}`\n            }),\n        })\n            .then(res => res.json())\n            .then(json => {\n                const updatedFeature = json;\n                setFeature(updatedFeature);\n            });\n        //setFeatureId(json.id))\n\n        setName('')\n        setWireFramesLink('')\n        setTestCasesLink('')\n        setNeedAccessResources('')\n        setTestFramework('')\n        setProjectMgmtResources('')\n        setTestStatus('')\n        setPriority('')\n    }\n\n    function onSubmitMessage(e) {\n        e.preventDefault();\n        const token = localStorage.getItem(\"jwt\");\n        fetch(`${url}/messages`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                message: `${newMessage}`,\n                user_id: `${currentUser.id}`,\n                feature_id: `${id}`,\n            }),\n        })\n            .then(res => res.json())\n            .then(json => {\n                const updatedMessagePost = json;\n                setNewMessagePost(updatedMessagePost);\n            });\n        //setFeatureId(json.id))\n\n        setNewMessage('')\n    }\n\n\n\n    return (\n\n        <div className=\"resource-container\">\n            <div className=\"update-feature-container\">\n                <h2>Test Resources</h2>\n            <br></br>\n                <Form className=\"feature-form\" id=\"resource-details\" onSubmit={onSubmit}>\n                    <p style={{fontWeight: 'bold'}}>Name of Feature or Project</p>\n                    <p>{name}</p>\n                    <p style={{fontWeight: 'bold'}}>Wireframes</p>\n                    <p><a href={wireframes_link}>{wireframes_link}</a></p>\n                    <p style={{fontWeight: 'bold'}}>Test Cases</p>\n                    <p><a href={test_cases_link}>{test_cases_link}</a></p>\n                    <p style={{fontWeight: 'bold'}}>Test Resource Requirements</p>\n                    <p>{need_access_resources}</p>\n                    <p style={{fontWeight: 'bold'}}>Test Framework Info</p>\n                    <p>{test_framework}</p>\n                    <p style={{fontWeight: 'bold'}}>Project Management Resources</p>\n                    <p>{project_mgmt_resources}</p>\n                    <p style={{fontWeight: 'bold'}}>Test Status</p>\n                    <p>{test_status}</p>\n                    <p style={{fontWeight: 'bold'}}>Priority</p>\n                    <p>{priority}</p>\n                    <br></br>\n                    <h2>Update Info</h2>\n                    <Button variant=\"primary\" type=\"submit\">Submit Changes</Button>\n                    <br></br>\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={1}\n                            placeholder=\"Name of feature or project\"\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Wireframes</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={1}\n                            placeholder=\"Link to wireframes\"\n                            value={wireframes_link}\n                            onChange={e => setWireFramesLink(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Test Cases</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={1}\n                            placeholder=\"Link to test suite\"\n                            value={test_cases_link}\n                            onChange={e => setTestCasesLink(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Test Resources</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={3}\n                            placeholder=\"List all resources that you'll need access to\"\n                            value={need_access_resources}\n                            onChange={e => setNeedAccessResources(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Test Automation</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={3}\n                            placeholder=\"Which test framework are you using? Language?\"\n                            value={test_framework}\n                            onChange={e => setTestFramework(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Project Management Resources</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={3}\n                            placeholder=\"Link to project management resources\"\n                            value={project_mgmt_resources}\n                            onChange={e => setProjectMgmtResources(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Test Status</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={1}\n                            placeholder=\"What is the test status?\"\n                            value={test_status}\n                            onChange={e => setTestStatus(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Priority</Form.Label>\n                <Form.Control\n                    as=\"textarea\"\n                    rows={1}\n                        placeholder=\"What is the priority of this feature or project?\"\n                        value={priority}\n                        onChange={e => setPriority(e.target.value)}\n                    />\n                    </Form.Group>\n\n                    \n                </Form>\n\n            </div>\n\n            <div className=\"messages-container\">\n                <h2 style={{color: 'white'}}>Messages</h2>\n                <div className=\"message-block\">\n                    {messages.map((message) => (\n                        <Message key={message.id} message={message} />\n                    ))}\n                </div>\n                <Form className=\"feature-form\" id=\"send-message\" onSubmit={onSubmitMessage}>\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label style={{color: 'white'}}>Chat with a Team Member</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={4}\n                            placeholder=\"Type here...\"\n                            value={newMessage}\n                            onChange={e => setNewMessage(e.target.value)}\n                        />\n                    </Form.Group>\n                    \n                    <Button id=\"send-message-btn\" variant=\"primary\" type=\"submit\">Send Message</Button>\n                </Form>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Resources","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport LoginSignup from './components/LoginSignup'\nimport Dashboard from './components/Dashboard';\nimport FeatureForm from './components/FeatureForm';\nimport Resources from './components/Resources';\nimport Button from 'react-bootstrap/Button';\n\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nfunction App() {\n  const production = \"https://project-5-backend.herokuapp.com/\";\n  const development = \"http://localhost:3000/\";\n  const url = (process.env.NODE_ENV === 'production' ? production : development);\n  const [user, setUser] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    fetch(`${url}/profile`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          setLoggedIn(true)\n          setUser(data.user)\n        });\n      } else {\n        console.log(\"please log in\")\n      }\n    });\n  }, []);\n\n\n  function signup(username, password, avatar) {\n    fetch(`${url}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: `${username}`,\n          password: `${password}`,\n          avatar: `${avatar}`,\n\n        },\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((data) => {\n            setUser(data.user)\n            setLoggedIn(true)\n            localStorage.setItem(\"jwt\", data.jwt);\n          });\n        } else {\n          console.log(\"form incorrectly filled out\")\n        }\n      })\n  }\n\n  function login(username, password) {\n    fetch(`${url}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: `${username}`,\n          password: `${password}`\n        }\n      })\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          console.log(\"hi\" + data.jwt)\n          setUser(data.user)\n          setLoggedIn(true)\n          localStorage.setItem(\"jwt\", data.jwt);\n        });\n      } else {\n        console.log(\"wrong username/password\")\n      }\n    })\n  }\n\n\n  function logout() {\n    localStorage.clear()\n    setUser(null)\n    setLoggedIn(false)\n  }\n\n\n  return (\n    <div className=\"App\">\n      {loggedIn ?\n        <Router>\n          <nav className=\"navbar-container\">\n            {user ?\n              <div>\n                <h2 className=\"navbar-text\">QAllaborative</h2>\n                <br></br>\n                <p className=\"hi-text\">Welcome, {user.username}</p>\n                <img src={user.avatar} className=\"avatar\" alt=\"avatar\"/>\n              </div>\n              : ''}\n            <Link to=\"/\">\n              <Button variant=\"primary\" id=\"nav-button\" className=\"nav-button\" type=\"button\">Dashboard</Button>\n            </Link>\n            \n            <Link to=\"/featureform\">\n              <Button variant=\"primary\" id=\"nav-button\" className=\"nav-button\" type=\"button\">Add a New Feature</Button>\n            </Link>\n\n            <Button variant=\"primary\" id=\"nav-button\" className=\"nav-button\" onClick={logout}>Logout</Button>\n            \n            <div className=\"footer-sources\">\n              Kayla Phelps \n              <br></br>\n              2021 Flatiron School\n              <br></br>\n              Sources:\n              Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\n              <br></br>\n              Image by <a href=\"https://pixabay.com/users/stokpic-692575/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=602975\">stokpic</a> from <a href=\"https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=602975\">Pixabay</a>\n              </div>\n            \n          </nav>\n\n          <Route exact path=\"/\">\n            <Dashboard currentUser={user} />\n          </Route>\n\n          <Route exact path=\"/featureform\">\n            <FeatureForm currentUser={user} />\n          </Route>\n\n          <Route exact path=\"/features/:id\">\n            <Resources currentUser={user} />\n          </Route>\n\n\n        </Router> :\n        <LoginSignup login={login} signup={signup} />\n      }\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}