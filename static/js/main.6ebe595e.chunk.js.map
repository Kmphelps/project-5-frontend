{"version":3,"sources":["components/LoginSignup.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["LoginSignup","login","signup","useState","username","setUsername","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","className","onSubmit","e","preventDefault","handleSubmitLogin","placeholder","type","value","onChange","target","handleSubmitSignup","Dashboard","features","setFeatures","useEffect","fetch","then","r","json","map","feature","name","App","url","user","setUser","loggedIn","setLoggedIn","token","localStorage","getItem","console","log","method","headers","Authorization","response","ok","data","to","onClick","clear","exact","path","currentUser","Accept","body","JSON","stringify","jwt","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ebe595e.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction LoginSignup ({ login, signup }) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [newUsername, setNewUsername] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n\n    function handleSubmitSignup(e) {\n        e.preventDefault()\n        signup(newUsername, newPassword)\n    }\n\n    function handleSubmitLogin(e) {\n        e.preventDefault();\n        login(username, password)\n    }\n\n        return (\n            <div className=\"login\">\n                <div className=\"title\">\n                    <h1>QA Resource Manager</h1>\n                </div>\n                <form onSubmit={(e) => handleSubmitLogin(e)}>\n                <input\n                    placeholder=\"username\"\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"password\"\n                    type=\"text\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\">Login</button>\n                </form>\n    \n                <form onSubmit={(e) => handleSubmitSignup(e)}>\n                <input\n                    placeholder=\"username\"\n                    type=\"text\"\n                    value={newUsername}\n                    onChange={(e) => setNewUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"password\"\n                    type=\"text\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                />\n                \n                <button type=\"submit\">Signup</button>\n                </form>\n            </div>\n        );\n}\n\nexport default LoginSignup","import { useEffect, useState } from 'react';\n\nfunction Dashboard() {\n    const [features, setFeatures] = useState([]);\n\n    // Gets all of the features and sets state\n    useEffect(() => {\n        const production = \"https://project-5-backend.herokuapp.com/\";\n        const development = \"http://localhost:3000/\";\n        const url = (process.env.NODE_ENV ? production : development);\n        fetch(`${url}features`)\n            .then((r) => r.json())\n            .then(setFeatures);\n    }, []);\n\n    return (\n        <div>\n            <section>\n                {features.map((feature) => (\n                    <div key={feature.name}>\n                        <h1>{feature.name}</h1>\n                    </div>\n                ))}\n            </section>\n        </div>\n    )\n\n}\n\n\nexport default Dashboard;","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport LoginSignup from './components/LoginSignup'\nimport Dashboard from './components/Dashboard';\n\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nfunction App() {\n  const production = \"https://project-5-backend.herokuapp.com/\";\n  const development = \"http://localhost:3000/\";\n  const url = (process.env.NODE_ENV ? production : development);\n  const [user, setUser] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    console.log(\"token: \" + token)\n    \n    fetch(`${url}profile`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          setLoggedIn(true)\n          setUser(data.user)\n        });\n      } else {\n        console.log(\"please log in\")\n      }\n    });\n  }, []);\n\n\n  function signup(username, password) {\n    fetch(`${url}users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: `${username}`,\n          password: `${password}`,\n        },\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((data) => {\n            setUser(data.user)\n            setLoggedIn(true)\n            localStorage.setItem(\"jwt\", data.jwt);\n          });\n        } else {\n          console.log(\"form incorrectly filled out\")\n        }\n      })\n  }\n\n  function login(username, password) {\n    fetch(`${url}login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: `${username}`,\n          password: `${password}`\n        }\n      })\n    }).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          console.log(\"hi\" + data.jwt)\n          setUser(data.user)\n          setLoggedIn(true)\n          localStorage.setItem(\"jwt\", data.jwt);\n        });\n      } else {\n        console.log(\"wrong username/password\")\n      }\n    })\n  }\n\n\n  function logout() {\n    localStorage.clear()\n    setUser(null)\n    setLoggedIn(false)\n  }\n\n\n  return (\n    <div className=\"App\">\n      {loggedIn ?\n        <Router>\n          <nav className=\"navbar-container\">\n            {user ? <h1>Hi {user.username}</h1> : ''}\n            <Link className=\"links\" to=\"/\">Dashboard</Link>\n            <button className=\"logout\" onClick={logout}>Logout</button>\n          </nav>\n\n          <Route exact path=\"/\">\n            <Dashboard currentUser={user} />\n          </Route>\n        </Router> :\n        <LoginSignup login={login} signup={signup} />\n      }\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}